
struct BaseInputVS
{
    float3 Position : POSITION;
    float2 Texcoord : TEXCOORD;
};

struct BaseOutputVS
{
    float4 Position : SV_POSITION;
    float2 Texcoord : TEXCOORD;
};

struct BaseOutputPS
{
    float4 Color : SV_Target0;
};

cbuffer WorldMatrixParameter
{
    float4x4 WorldMatrix;
};

cbuffer ViewProjectionMatrixParameter
{
    float4x4 ViewProjectionMatrix;
};

cbuffer ColorParameter
{
    float4 Color;
};

//cbuffer MaterialParameters : register(b0)
//{
//    float4 Color;
//};

BaseOutputVS MainVS(BaseInputVS Input)
{
    float4 WorldPosition = mul(float4(Input.Position, 1.0f), WorldMatrix);
    float4 ScreenPosition = mul(WorldPosition, ViewProjectionMatrix);

    BaseOutputVS Result;
    Result.Position = ScreenPosition;
    Result.Texcoord = Input.Texcoord;
    
    return Result;
}


BaseOutputPS MainPS(BaseOutputVS Input, bool IsFrontFace : SV_IsFrontFace)
{
    BaseOutputPS Output;
    Output.Color = Color;
    return Output;
}
